{"version":3,"sources":["webpack:///./node_modules/@ecomplus/storefront-template/template/js/lib/fetch-info.js"],"names":["window","_info","fetchInfoPromises","modulesToFetch","endpoint","Object","keys","utm","length","push","reqOptions","method","data","forEach","modInfo","promise","Promise","resolve","modules","url","axiosConfig","timeout","then","result","Array","isArray","error","response","field","val","undefined","monthly_interest","max_number","value","emitter","emit","catch","err","console","finally","all"],"mappings":"yIAIAA,OAAOC,MAAQD,OAAOC,OAAS,GAC/B,MAAMC,EAAoB,GACpBC,EAAiB,CACrB,CAAEC,SAAU,iBACZ,CAAEA,SAAU,uBAEVC,OAAOC,KAAKC,KAAKC,QACnBL,EAAeM,KAAK,CAClBL,SAAU,iBACVM,WAAY,CACVC,OAAQ,OACRC,KAAM,CAAEL,YAKdJ,EAAeU,SAAQ,EAAGT,WAAUM,iBAClC,MAAMI,EAAU,GAChBd,OAAOC,MAAMG,GAAYU,EAEzB,MAAMC,EAAU,IAAIC,SAAQC,IAC1BC,YAAQ,CACNC,IAAK,IAAF,OAAMf,EAAN,YACAM,EACHU,YAAa,CACXC,QAAS,OAIVC,MAAK,EAAGV,WACP,MAAM,OAAEW,GAAWX,EACfY,MAAMC,QAAQF,IAChBA,EAAOV,SAAQ,EAAGa,QAAOC,eACvB,IAAKD,EAAO,CACV,IAAIE,EAAOC,EAEX,OAAQzB,GACN,IAAK,qBACHwB,EAAQ,2BACRC,EAAMF,EAASC,GACI,iBAARC,SAAwCC,IAAnBhB,EAAQc,IAAwBC,EAAMf,EAAQc,MAC5Ed,EAAQc,GAASC,GAEnB,MAEF,IAAK,gBACHD,EAAQ,sBACRC,EAAMF,EAASC,GACXC,KAASf,EAAQc,IACnBC,EAAIE,iBAAmBjB,EAAQc,GAAOG,kBACtCF,EAAIG,WAAalB,EAAQc,GAAOI,cAChClB,EAAQc,GAASC,GAEnBD,EAAQ,kBACRC,EAAMF,EAASC,GACXC,KAASf,EAAQc,IAAUC,EAAII,MAAQnB,EAAQc,GAAOK,SACxDnB,EAAQc,GAASC,GAEnB,MAEF,QACED,EAAQ,2BACRC,EAAMF,EAASC,GACXC,KAASf,EAAQc,IAAUC,EAAII,MAAQnB,EAAQc,GAAOK,SACxDnB,EAAQc,GAASC,QAM7BK,IAAQC,KAAR,eAAqB/B,GAAYU,MAGlCsB,OAAMC,IACLC,QAAQZ,MAAMW,GACdH,IAAQC,KAAR,eAAqB/B,GAAYiC,MAGlCE,QAAQtB,MAGbf,EAAkBO,KAAKM,MAGzBC,QAAQwB,IAAItC,GACToB,MAAK,IAAMY,IAAQC,KAAK,OAAQnC,OAAOC","file":"chunk.924ae9a810ac66679c04.js","sourcesContent":["import { modules } from '@ecomplus/client'\nimport emitter from './emitter'\nimport utm from './persist-utm'\n\nwindow._info = window._info || {}\nconst fetchInfoPromises = []\nconst modulesToFetch = [\n  { endpoint: 'list_payments' },\n  { endpoint: 'calculate_shipping' }\n]\nif (Object.keys(utm).length) {\n  modulesToFetch.push({\n    endpoint: 'apply_discount',\n    reqOptions: {\n      method: 'post',\n      data: { utm }\n    }\n  })\n}\n\nmodulesToFetch.forEach(({ endpoint, reqOptions }) => {\n  const modInfo = {}\n  window._info[endpoint] = modInfo\n\n  const promise = new Promise(resolve => {\n    modules({\n      url: `/${endpoint}.json`,\n      ...reqOptions,\n      axiosConfig: {\n        timeout: 10000\n      }\n    })\n\n      .then(({ data }) => {\n        const { result } = data\n        if (Array.isArray(result)) {\n          result.forEach(({ error, response }) => {\n            if (!error) {\n              let field, val\n\n              switch (endpoint) {\n                case 'calculate_shipping':\n                  field = 'free_shipping_from_value'\n                  val = response[field]\n                  if (typeof val === 'number' && (modInfo[field] === undefined || val < modInfo[field])) {\n                    modInfo[field] = val\n                  }\n                  break\n\n                case 'list_payments':\n                  field = 'installments_option'\n                  val = response[field]\n                  if (val && (!modInfo[field] ||\n                    val.monthly_interest < modInfo[field].monthly_interest ||\n                    val.max_number > modInfo[field].max_number)) {\n                    modInfo[field] = val\n                  }\n                  field = 'discount_option'\n                  val = response[field]\n                  if (val && (!modInfo[field] || val.value > modInfo[field].value)) {\n                    modInfo[field] = val\n                  }\n                  break\n\n                default:\n                  field = 'available_extra_discount'\n                  val = response[field]\n                  if (val && (!modInfo[field] || val.value > modInfo[field].value)) {\n                    modInfo[field] = val\n                  }\n              }\n            }\n          })\n        }\n        emitter.emit(`info:${endpoint}`, modInfo)\n      })\n\n      .catch(err => {\n        console.error(err)\n        emitter.emit(`info:${endpoint}`, err)\n      })\n\n      .finally(resolve)\n  })\n\n  fetchInfoPromises.push(promise)\n})\n\nPromise.all(fetchInfoPromises)\n  .then(() => emitter.emit('info', window._info))\n"],"sourceRoot":""}